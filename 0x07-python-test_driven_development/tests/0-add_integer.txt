#0-add_integer.txt

===========================
Using 0-add_integer.py
===========================

Using the integer addition function ``add_integer(a, b=98)``.

Usage
=====

The function returns the addition of its two arguments.

First import the function from the 0-add_integer file:


	>>> add_integer = __import__('0-add_integer').add_integer

Then use it:


	>>> add_integer(2, 3)
	5

With negative numbers:


	>>> add_integer(-12, -9)
	-21

With floating-point values:


	>>> add_integer(2.0, 3.0)
	5

The floats are casted to int before addition is performed.


	>>> add_integer(-12.7, -9.5)
	-21

Floating point values and non-floating point values can be combined.


	>>> add_integer(5, 2.4)
	7

The second argument `b` has a default value of 98.

	>>> add_integer(3)
	101

Exception
=========

The ``add_integer()`` excepts integers or floats as both its arguments.
If either `a` or `b` is not an integer or float, a TypeError is raised.




	>>> add_integer('Aishah', -9)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer


	>>> add_integer(7, 'Aishah')
        Traceback (most recent call last):
                ...
        TypeError: b must be an integer

	
	>>> add_integer(None)
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer


	>>> add_integer('Best', 'School')
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer

	
